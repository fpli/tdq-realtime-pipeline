/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.dap.tdq.common.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** This category of cols include the fields which tracking system definition
* and describe a ebay page and its elements */
@org.apache.avro.specific.AvroGenerated
public class PageInteractionContext extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5612812616318967210L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PageInteractionContext\",\"namespace\":\"com.ebay.dap.tdq.common.model.avro\",\"doc\":\"This category of cols include the fields which tracking system definition\\n* and describe a ebay page and its elements\",\"fields\":[{\"name\":\"pageId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"siteId\",\"type\":\"int\"},{\"name\":\"countryId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"userLang\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"referrer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"siteSpeed\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"default\":{}},{\"name\":\"moduleId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"linkId\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PageInteractionContext> ENCODER =
      new BinaryMessageEncoder<PageInteractionContext>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PageInteractionContext> DECODER =
      new BinaryMessageDecoder<PageInteractionContext>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PageInteractionContext> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PageInteractionContext> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PageInteractionContext> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PageInteractionContext>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PageInteractionContext to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PageInteractionContext from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PageInteractionContext instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PageInteractionContext fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Integer pageId;
   private int siteId;
   private java.lang.Integer countryId;
   private java.lang.String userLang;
   private java.lang.String url;
   private java.lang.String referrer;
   private java.util.Map<java.lang.String,java.lang.String> siteSpeed;
   private java.lang.Integer moduleId;
   private java.lang.Integer linkId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PageInteractionContext() {}

  /**
   * All-args constructor.
   * @param pageId The new value for pageId
   * @param siteId The new value for siteId
   * @param countryId The new value for countryId
   * @param userLang The new value for userLang
   * @param url The new value for url
   * @param referrer The new value for referrer
   * @param siteSpeed The new value for siteSpeed
   * @param moduleId The new value for moduleId
   * @param linkId The new value for linkId
   */
  public PageInteractionContext(java.lang.Integer pageId, java.lang.Integer siteId, java.lang.Integer countryId, java.lang.String userLang, java.lang.String url, java.lang.String referrer, java.util.Map<java.lang.String,java.lang.String> siteSpeed, java.lang.Integer moduleId, java.lang.Integer linkId) {
    this.pageId = pageId;
    this.siteId = siteId;
    this.countryId = countryId;
    this.userLang = userLang;
    this.url = url;
    this.referrer = referrer;
    this.siteSpeed = siteSpeed;
    this.moduleId = moduleId;
    this.linkId = linkId;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pageId;
    case 1: return siteId;
    case 2: return countryId;
    case 3: return userLang;
    case 4: return url;
    case 5: return referrer;
    case 6: return siteSpeed;
    case 7: return moduleId;
    case 8: return linkId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pageId = (java.lang.Integer)value$; break;
    case 1: siteId = (java.lang.Integer)value$; break;
    case 2: countryId = (java.lang.Integer)value$; break;
    case 3: userLang = value$ != null ? value$.toString() : null; break;
    case 4: url = value$ != null ? value$.toString() : null; break;
    case 5: referrer = value$ != null ? value$.toString() : null; break;
    case 6: siteSpeed = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 7: moduleId = (java.lang.Integer)value$; break;
    case 8: linkId = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'pageId' field.
   * @return The value of the 'pageId' field.
   */
  public java.lang.Integer getPageId() {
    return pageId;
  }


  /**
   * Sets the value of the 'pageId' field.
   * @param value the value to set.
   */
  public void setPageId(java.lang.Integer value) {
    this.pageId = value;
  }

  /**
   * Gets the value of the 'siteId' field.
   * @return The value of the 'siteId' field.
   */
  public int getSiteId() {
    return siteId;
  }


  /**
   * Sets the value of the 'siteId' field.
   * @param value the value to set.
   */
  public void setSiteId(int value) {
    this.siteId = value;
  }

  /**
   * Gets the value of the 'countryId' field.
   * @return The value of the 'countryId' field.
   */
  public java.lang.Integer getCountryId() {
    return countryId;
  }


  /**
   * Sets the value of the 'countryId' field.
   * @param value the value to set.
   */
  public void setCountryId(java.lang.Integer value) {
    this.countryId = value;
  }

  /**
   * Gets the value of the 'userLang' field.
   * @return The value of the 'userLang' field.
   */
  public java.lang.String getUserLang() {
    return userLang;
  }


  /**
   * Sets the value of the 'userLang' field.
   * @param value the value to set.
   */
  public void setUserLang(java.lang.String value) {
    this.userLang = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public java.lang.String getUrl() {
    return url;
  }


  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.String value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'referrer' field.
   * @return The value of the 'referrer' field.
   */
  public java.lang.String getReferrer() {
    return referrer;
  }


  /**
   * Sets the value of the 'referrer' field.
   * @param value the value to set.
   */
  public void setReferrer(java.lang.String value) {
    this.referrer = value;
  }

  /**
   * Gets the value of the 'siteSpeed' field.
   * @return The value of the 'siteSpeed' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getSiteSpeed() {
    return siteSpeed;
  }


  /**
   * Sets the value of the 'siteSpeed' field.
   * @param value the value to set.
   */
  public void setSiteSpeed(java.util.Map<java.lang.String,java.lang.String> value) {
    this.siteSpeed = value;
  }

  /**
   * Gets the value of the 'moduleId' field.
   * @return The value of the 'moduleId' field.
   */
  public java.lang.Integer getModuleId() {
    return moduleId;
  }


  /**
   * Sets the value of the 'moduleId' field.
   * @param value the value to set.
   */
  public void setModuleId(java.lang.Integer value) {
    this.moduleId = value;
  }

  /**
   * Gets the value of the 'linkId' field.
   * @return The value of the 'linkId' field.
   */
  public java.lang.Integer getLinkId() {
    return linkId;
  }


  /**
   * Sets the value of the 'linkId' field.
   * @param value the value to set.
   */
  public void setLinkId(java.lang.Integer value) {
    this.linkId = value;
  }

  /**
   * Creates a new PageInteractionContext RecordBuilder.
   * @return A new PageInteractionContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder newBuilder() {
    return new com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder();
  }

  /**
   * Creates a new PageInteractionContext RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PageInteractionContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder(other);
    }
  }

  /**
   * Creates a new PageInteractionContext RecordBuilder by copying an existing PageInteractionContext instance.
   * @param other The existing instance to copy.
   * @return A new PageInteractionContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.PageInteractionContext other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder(other);
    }
  }

  /**
   * RecordBuilder for PageInteractionContext instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PageInteractionContext>
    implements org.apache.avro.data.RecordBuilder<PageInteractionContext> {

    private java.lang.Integer pageId;
    private int siteId;
    private java.lang.Integer countryId;
    private java.lang.String userLang;
    private java.lang.String url;
    private java.lang.String referrer;
    private java.util.Map<java.lang.String,java.lang.String> siteSpeed;
    private java.lang.Integer moduleId;
    private java.lang.Integer linkId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.pageId)) {
        this.pageId = data().deepCopy(fields()[0].schema(), other.pageId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.siteId)) {
        this.siteId = data().deepCopy(fields()[1].schema(), other.siteId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.countryId)) {
        this.countryId = data().deepCopy(fields()[2].schema(), other.countryId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.userLang)) {
        this.userLang = data().deepCopy(fields()[3].schema(), other.userLang);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.url)) {
        this.url = data().deepCopy(fields()[4].schema(), other.url);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.referrer)) {
        this.referrer = data().deepCopy(fields()[5].schema(), other.referrer);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.siteSpeed)) {
        this.siteSpeed = data().deepCopy(fields()[6].schema(), other.siteSpeed);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.moduleId)) {
        this.moduleId = data().deepCopy(fields()[7].schema(), other.moduleId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.linkId)) {
        this.linkId = data().deepCopy(fields()[8].schema(), other.linkId);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing PageInteractionContext instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.PageInteractionContext other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.pageId)) {
        this.pageId = data().deepCopy(fields()[0].schema(), other.pageId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.siteId)) {
        this.siteId = data().deepCopy(fields()[1].schema(), other.siteId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.countryId)) {
        this.countryId = data().deepCopy(fields()[2].schema(), other.countryId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.userLang)) {
        this.userLang = data().deepCopy(fields()[3].schema(), other.userLang);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.url)) {
        this.url = data().deepCopy(fields()[4].schema(), other.url);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.referrer)) {
        this.referrer = data().deepCopy(fields()[5].schema(), other.referrer);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.siteSpeed)) {
        this.siteSpeed = data().deepCopy(fields()[6].schema(), other.siteSpeed);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.moduleId)) {
        this.moduleId = data().deepCopy(fields()[7].schema(), other.moduleId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.linkId)) {
        this.linkId = data().deepCopy(fields()[8].schema(), other.linkId);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'pageId' field.
      * @return The value.
      */
    public java.lang.Integer getPageId() {
      return pageId;
    }


    /**
      * Sets the value of the 'pageId' field.
      * @param value The value of 'pageId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setPageId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.pageId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'pageId' field has been set.
      * @return True if the 'pageId' field has been set, false otherwise.
      */
    public boolean hasPageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'pageId' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearPageId() {
      pageId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteId' field.
      * @return The value.
      */
    public int getSiteId() {
      return siteId;
    }


    /**
      * Sets the value of the 'siteId' field.
      * @param value The value of 'siteId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setSiteId(int value) {
      validate(fields()[1], value);
      this.siteId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'siteId' field has been set.
      * @return True if the 'siteId' field has been set, false otherwise.
      */
    public boolean hasSiteId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'siteId' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearSiteId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryId' field.
      * @return The value.
      */
    public java.lang.Integer getCountryId() {
      return countryId;
    }


    /**
      * Sets the value of the 'countryId' field.
      * @param value The value of 'countryId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setCountryId(java.lang.Integer value) {
      validate(fields()[2], value);
      this.countryId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'countryId' field has been set.
      * @return True if the 'countryId' field has been set, false otherwise.
      */
    public boolean hasCountryId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'countryId' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearCountryId() {
      countryId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'userLang' field.
      * @return The value.
      */
    public java.lang.String getUserLang() {
      return userLang;
    }


    /**
      * Sets the value of the 'userLang' field.
      * @param value The value of 'userLang'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setUserLang(java.lang.String value) {
      validate(fields()[3], value);
      this.userLang = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'userLang' field has been set.
      * @return True if the 'userLang' field has been set, false otherwise.
      */
    public boolean hasUserLang() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'userLang' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearUserLang() {
      userLang = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public java.lang.String getUrl() {
      return url;
    }


    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setUrl(java.lang.String value) {
      validate(fields()[4], value);
      this.url = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearUrl() {
      url = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'referrer' field.
      * @return The value.
      */
    public java.lang.String getReferrer() {
      return referrer;
    }


    /**
      * Sets the value of the 'referrer' field.
      * @param value The value of 'referrer'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setReferrer(java.lang.String value) {
      validate(fields()[5], value);
      this.referrer = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'referrer' field has been set.
      * @return True if the 'referrer' field has been set, false otherwise.
      */
    public boolean hasReferrer() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'referrer' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearReferrer() {
      referrer = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteSpeed' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getSiteSpeed() {
      return siteSpeed;
    }


    /**
      * Sets the value of the 'siteSpeed' field.
      * @param value The value of 'siteSpeed'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setSiteSpeed(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[6], value);
      this.siteSpeed = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'siteSpeed' field has been set.
      * @return True if the 'siteSpeed' field has been set, false otherwise.
      */
    public boolean hasSiteSpeed() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'siteSpeed' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearSiteSpeed() {
      siteSpeed = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'moduleId' field.
      * @return The value.
      */
    public java.lang.Integer getModuleId() {
      return moduleId;
    }


    /**
      * Sets the value of the 'moduleId' field.
      * @param value The value of 'moduleId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setModuleId(java.lang.Integer value) {
      validate(fields()[7], value);
      this.moduleId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'moduleId' field has been set.
      * @return True if the 'moduleId' field has been set, false otherwise.
      */
    public boolean hasModuleId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'moduleId' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearModuleId() {
      moduleId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'linkId' field.
      * @return The value.
      */
    public java.lang.Integer getLinkId() {
      return linkId;
    }


    /**
      * Sets the value of the 'linkId' field.
      * @param value The value of 'linkId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder setLinkId(java.lang.Integer value) {
      validate(fields()[8], value);
      this.linkId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'linkId' field has been set.
      * @return True if the 'linkId' field has been set, false otherwise.
      */
    public boolean hasLinkId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'linkId' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.PageInteractionContext.Builder clearLinkId() {
      linkId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PageInteractionContext build() {
      try {
        PageInteractionContext record = new PageInteractionContext();
        record.pageId = fieldSetFlags()[0] ? this.pageId : (java.lang.Integer) defaultValue(fields()[0]);
        record.siteId = fieldSetFlags()[1] ? this.siteId : (java.lang.Integer) defaultValue(fields()[1]);
        record.countryId = fieldSetFlags()[2] ? this.countryId : (java.lang.Integer) defaultValue(fields()[2]);
        record.userLang = fieldSetFlags()[3] ? this.userLang : (java.lang.String) defaultValue(fields()[3]);
        record.url = fieldSetFlags()[4] ? this.url : (java.lang.String) defaultValue(fields()[4]);
        record.referrer = fieldSetFlags()[5] ? this.referrer : (java.lang.String) defaultValue(fields()[5]);
        record.siteSpeed = fieldSetFlags()[6] ? this.siteSpeed : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[6]);
        record.moduleId = fieldSetFlags()[7] ? this.moduleId : (java.lang.Integer) defaultValue(fields()[7]);
        record.linkId = fieldSetFlags()[8] ? this.linkId : (java.lang.Integer) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PageInteractionContext>
    WRITER$ = (org.apache.avro.io.DatumWriter<PageInteractionContext>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PageInteractionContext>
    READER$ = (org.apache.avro.io.DatumReader<PageInteractionContext>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.pageId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.pageId);
    }

    out.writeInt(this.siteId);

    if (this.countryId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.countryId);
    }

    if (this.userLang == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userLang);
    }

    if (this.url == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.url);
    }

    if (this.referrer == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.referrer);
    }

    long size0 = this.siteSpeed.size();
    out.writeMapStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> e0: this.siteSpeed.entrySet()) {
      actualSize0++;
      out.startItem();
      out.writeString(e0.getKey());
      java.lang.String v0 = e0.getValue();
      out.writeString(v0);
    }
    out.writeMapEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    if (this.moduleId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.moduleId);
    }

    if (this.linkId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.linkId);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.pageId = null;
      } else {
        this.pageId = in.readInt();
      }

      this.siteId = in.readInt();

      if (in.readIndex() != 1) {
        in.readNull();
        this.countryId = null;
      } else {
        this.countryId = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userLang = null;
      } else {
        this.userLang = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.url = null;
      } else {
        this.url = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.referrer = null;
      } else {
        this.referrer = in.readString();
      }

      long size0 = in.readMapStart();
      java.util.Map<java.lang.String,java.lang.String> m0 = this.siteSpeed; // Need fresh name due to limitation of macro system
      if (m0 == null) {
        m0 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size0);
        this.siteSpeed = m0;
      } else m0.clear();
      for ( ; 0 < size0; size0 = in.mapNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.String k0 = null;
          k0 = in.readString();
          java.lang.String v0 = null;
          v0 = in.readString();
          m0.put(k0, v0);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.moduleId = null;
      } else {
        this.moduleId = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.linkId = null;
      } else {
        this.linkId = in.readInt();
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.pageId = null;
          } else {
            this.pageId = in.readInt();
          }
          break;

        case 1:
          this.siteId = in.readInt();
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.countryId = null;
          } else {
            this.countryId = in.readInt();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userLang = null;
          } else {
            this.userLang = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.url = null;
          } else {
            this.url = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.referrer = null;
          } else {
            this.referrer = in.readString();
          }
          break;

        case 6:
          long size0 = in.readMapStart();
          java.util.Map<java.lang.String,java.lang.String> m0 = this.siteSpeed; // Need fresh name due to limitation of macro system
          if (m0 == null) {
            m0 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size0);
            this.siteSpeed = m0;
          } else m0.clear();
          for ( ; 0 < size0; size0 = in.mapNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.String k0 = null;
              k0 = in.readString();
              java.lang.String v0 = null;
              v0 = in.readString();
              m0.put(k0, v0);
            }
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.moduleId = null;
          } else {
            this.moduleId = in.readInt();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.linkId = null;
          } else {
            this.linkId = in.readInt();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










