/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.dap.tdq.common.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** This category of cols describe the customer identity info in ebay */
@org.apache.avro.specific.AvroGenerated
public class UserIdentityContext extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8099681080448738410L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserIdentityContext\",\"namespace\":\"com.ebay.dap.tdq.common.model.avro\",\"doc\":\"This category of cols describe the customer identity info in ebay\",\"fields\":[{\"name\":\"identityId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"userName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"guid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserIdentityContext> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserIdentityContext> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserIdentityContext> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserIdentityContext> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserIdentityContext> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserIdentityContext to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserIdentityContext from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserIdentityContext instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserIdentityContext fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String identityId;
  private java.lang.Long userId;
  private java.lang.String userName;
  private java.lang.String guid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserIdentityContext() {}

  /**
   * All-args constructor.
   * @param identityId The new value for identityId
   * @param userId The new value for userId
   * @param userName The new value for userName
   * @param guid The new value for guid
   */
  public UserIdentityContext(java.lang.String identityId, java.lang.Long userId, java.lang.String userName, java.lang.String guid) {
    this.identityId = identityId;
    this.userId = userId;
    this.userName = userName;
    this.guid = guid;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identityId;
    case 1: return userId;
    case 2: return userName;
    case 3: return guid;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identityId = value$ != null ? value$.toString() : null; break;
    case 1: userId = (java.lang.Long)value$; break;
    case 2: userName = value$ != null ? value$.toString() : null; break;
    case 3: guid = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'identityId' field.
   * @return The value of the 'identityId' field.
   */
  public java.lang.String getIdentityId() {
    return identityId;
  }


  /**
   * Sets the value of the 'identityId' field.
   * @param value the value to set.
   */
  public void setIdentityId(java.lang.String value) {
    this.identityId = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'userName' field.
   * @return The value of the 'userName' field.
   */
  public java.lang.String getUserName() {
    return userName;
  }


  /**
   * Sets the value of the 'userName' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.String value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'guid' field.
   * @return The value of the 'guid' field.
   */
  public java.lang.String getGuid() {
    return guid;
  }


  /**
   * Sets the value of the 'guid' field.
   * @param value the value to set.
   */
  public void setGuid(java.lang.String value) {
    this.guid = value;
  }

  /**
   * Creates a new UserIdentityContext RecordBuilder.
   * @return A new UserIdentityContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder newBuilder() {
    return new com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder();
  }

  /**
   * Creates a new UserIdentityContext RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserIdentityContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder(other);
    }
  }

  /**
   * Creates a new UserIdentityContext RecordBuilder by copying an existing UserIdentityContext instance.
   * @param other The existing instance to copy.
   * @return A new UserIdentityContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.UserIdentityContext other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserIdentityContext instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserIdentityContext>
    implements org.apache.avro.data.RecordBuilder<UserIdentityContext> {

    private java.lang.String identityId;
    private java.lang.Long userId;
    private java.lang.String userName;
    private java.lang.String guid;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.identityId)) {
        this.identityId = data().deepCopy(fields()[0].schema(), other.identityId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.guid)) {
        this.guid = data().deepCopy(fields()[3].schema(), other.guid);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing UserIdentityContext instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.UserIdentityContext other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.identityId)) {
        this.identityId = data().deepCopy(fields()[0].schema(), other.identityId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.guid)) {
        this.guid = data().deepCopy(fields()[3].schema(), other.guid);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'identityId' field.
      * @return The value.
      */
    public java.lang.String getIdentityId() {
      return identityId;
    }


    /**
      * Sets the value of the 'identityId' field.
      * @param value The value of 'identityId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder setIdentityId(java.lang.String value) {
      validate(fields()[0], value);
      this.identityId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'identityId' field has been set.
      * @return True if the 'identityId' field has been set, false otherwise.
      */
    public boolean hasIdentityId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'identityId' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder clearIdentityId() {
      identityId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder setUserId(java.lang.Long value) {
      validate(fields()[1], value);
      this.userId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userName' field.
      * @return The value.
      */
    public java.lang.String getUserName() {
      return userName;
    }


    /**
      * Sets the value of the 'userName' field.
      * @param value The value of 'userName'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder setUserName(java.lang.String value) {
      validate(fields()[2], value);
      this.userName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userName' field has been set.
      * @return True if the 'userName' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userName' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder clearUserName() {
      userName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'guid' field.
      * @return The value.
      */
    public java.lang.String getGuid() {
      return guid;
    }


    /**
      * Sets the value of the 'guid' field.
      * @param value The value of 'guid'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder setGuid(java.lang.String value) {
      validate(fields()[3], value);
      this.guid = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'guid' field has been set.
      * @return True if the 'guid' field has been set, false otherwise.
      */
    public boolean hasGuid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'guid' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.UserIdentityContext.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserIdentityContext build() {
      try {
        UserIdentityContext record = new UserIdentityContext();
        record.identityId = fieldSetFlags()[0] ? this.identityId : (java.lang.String) defaultValue(fields()[0]);
        record.userId = fieldSetFlags()[1] ? this.userId : (java.lang.Long) defaultValue(fields()[1]);
        record.userName = fieldSetFlags()[2] ? this.userName : (java.lang.String) defaultValue(fields()[2]);
        record.guid = fieldSetFlags()[3] ? this.guid : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserIdentityContext>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserIdentityContext>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserIdentityContext>
    READER$ = (org.apache.avro.io.DatumReader<UserIdentityContext>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.identityId);

    if (this.userId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.userId);
    }

    if (this.userName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.userName);
    }

    if (this.guid == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.guid);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.identityId = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.userId = null;
      } else {
        this.userId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.userName = null;
      } else {
        this.userName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.guid = null;
      } else {
        this.guid = in.readString();
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.identityId = in.readString();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userId = null;
          } else {
            this.userId = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.userName = null;
          } else {
            this.userName = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.guid = null;
          } else {
            this.guid = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










