/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.dap.tdq.common.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ExperimentationContext extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 834372711345975011L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExperimentationContext\",\"namespace\":\"com.ebay.dap.tdq.common.model.avro\",\"fields\":[{\"name\":\"es\",\"type\":\"int\",\"doc\":\"ep site id - using com.ebay.globalenv.SiteEnum\",\"default\":901},{\"name\":\"ec\",\"type\":\"int\",\"doc\":\"ep channel id - using com.ebay.ep.core.cos.COSUtil\",\"default\":99},{\"name\":\"xt\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"doc\":\"set of experienced treatments\",\"default\":[]},{\"name\":\"ot\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"doc\":\"set of optin treatments\",\"default\":[]},{\"name\":\"os\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"doc\":\"qualification info for optin treatments\",\"default\":[]},{\"name\":\"eprlogid\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"rlogid of the host that perform qualification\",\"default\":\"\"},{\"name\":\"epcalenv\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"the CAL environmant of eprlogid\",\"default\":\"\"},{\"name\":\"qt\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"doc\":\"set of qualified treatments\",\"default\":[]},{\"name\":\"qc\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"doc\":\"set of contextual qualified treatments\",\"default\":[]},{\"name\":\"uit\",\"type\":[\"long\",\"null\"],\"doc\":\"User identification timestamp\",\"default\":0},{\"name\":\"mdbreftime\",\"type\":[\"long\",\"null\"],\"doc\":\"timestamp of last experiment metadata refresh from database\",\"default\":0},{\"name\":\"anyId\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AnyId\",\"fields\":[{\"name\":\"val\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"AnyId value\",\"default\":\"\"},{\"name\":\"xt\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"doc\":\"set of experienced treatmentids for this AnyId value\",\"default\":[]}]}},\"doc\":\"Information for AnyId type EP\",\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ExperimentationContext> ENCODER =
      new BinaryMessageEncoder<ExperimentationContext>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ExperimentationContext> DECODER =
      new BinaryMessageDecoder<ExperimentationContext>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ExperimentationContext> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ExperimentationContext> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ExperimentationContext> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ExperimentationContext>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ExperimentationContext to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ExperimentationContext from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ExperimentationContext instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ExperimentationContext fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** ep site id - using com.ebay.globalenv.SiteEnum */
   private int es;
  /** ep channel id - using com.ebay.ep.core.cos.COSUtil */
   private int ec;
  /** set of experienced treatments */
   private java.util.List<java.lang.Long> xt;
  /** set of optin treatments */
   private java.util.List<java.lang.Long> ot;
  /** qualification info for optin treatments */
   private java.util.List<java.lang.String> os;
  /** rlogid of the host that perform qualification */
   private java.lang.String eprlogid;
  /** the CAL environmant of eprlogid */
   private java.lang.String epcalenv;
  /** set of qualified treatments */
   private java.util.List<java.lang.Long> qt;
  /** set of contextual qualified treatments */
   private java.util.List<java.lang.Long> qc;
  /** User identification timestamp */
   private java.lang.Long uit;
  /** timestamp of last experiment metadata refresh from database */
   private java.lang.Long mdbreftime;
  /** Information for AnyId type EP */
   private java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> anyId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ExperimentationContext() {}

  /**
   * All-args constructor.
   * @param es ep site id - using com.ebay.globalenv.SiteEnum
   * @param ec ep channel id - using com.ebay.ep.core.cos.COSUtil
   * @param xt set of experienced treatments
   * @param ot set of optin treatments
   * @param os qualification info for optin treatments
   * @param eprlogid rlogid of the host that perform qualification
   * @param epcalenv the CAL environmant of eprlogid
   * @param qt set of qualified treatments
   * @param qc set of contextual qualified treatments
   * @param uit User identification timestamp
   * @param mdbreftime timestamp of last experiment metadata refresh from database
   * @param anyId Information for AnyId type EP
   */
  public ExperimentationContext(java.lang.Integer es, java.lang.Integer ec, java.util.List<java.lang.Long> xt, java.util.List<java.lang.Long> ot, java.util.List<java.lang.String> os, java.lang.String eprlogid, java.lang.String epcalenv, java.util.List<java.lang.Long> qt, java.util.List<java.lang.Long> qc, java.lang.Long uit, java.lang.Long mdbreftime, java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> anyId) {
    this.es = es;
    this.ec = ec;
    this.xt = xt;
    this.ot = ot;
    this.os = os;
    this.eprlogid = eprlogid;
    this.epcalenv = epcalenv;
    this.qt = qt;
    this.qc = qc;
    this.uit = uit;
    this.mdbreftime = mdbreftime;
    this.anyId = anyId;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return es;
    case 1: return ec;
    case 2: return xt;
    case 3: return ot;
    case 4: return os;
    case 5: return eprlogid;
    case 6: return epcalenv;
    case 7: return qt;
    case 8: return qc;
    case 9: return uit;
    case 10: return mdbreftime;
    case 11: return anyId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: es = (java.lang.Integer)value$; break;
    case 1: ec = (java.lang.Integer)value$; break;
    case 2: xt = (java.util.List<java.lang.Long>)value$; break;
    case 3: ot = (java.util.List<java.lang.Long>)value$; break;
    case 4: os = (java.util.List<java.lang.String>)value$; break;
    case 5: eprlogid = value$ != null ? value$.toString() : null; break;
    case 6: epcalenv = value$ != null ? value$.toString() : null; break;
    case 7: qt = (java.util.List<java.lang.Long>)value$; break;
    case 8: qc = (java.util.List<java.lang.Long>)value$; break;
    case 9: uit = (java.lang.Long)value$; break;
    case 10: mdbreftime = (java.lang.Long)value$; break;
    case 11: anyId = (java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'es' field.
   * @return ep site id - using com.ebay.globalenv.SiteEnum
   */
  public int getEs() {
    return es;
  }


  /**
   * Sets the value of the 'es' field.
   * ep site id - using com.ebay.globalenv.SiteEnum
   * @param value the value to set.
   */
  public void setEs(int value) {
    this.es = value;
  }

  /**
   * Gets the value of the 'ec' field.
   * @return ep channel id - using com.ebay.ep.core.cos.COSUtil
   */
  public int getEc() {
    return ec;
  }


  /**
   * Sets the value of the 'ec' field.
   * ep channel id - using com.ebay.ep.core.cos.COSUtil
   * @param value the value to set.
   */
  public void setEc(int value) {
    this.ec = value;
  }

  /**
   * Gets the value of the 'xt' field.
   * @return set of experienced treatments
   */
  public java.util.List<java.lang.Long> getXt() {
    return xt;
  }


  /**
   * Sets the value of the 'xt' field.
   * set of experienced treatments
   * @param value the value to set.
   */
  public void setXt(java.util.List<java.lang.Long> value) {
    this.xt = value;
  }

  /**
   * Gets the value of the 'ot' field.
   * @return set of optin treatments
   */
  public java.util.List<java.lang.Long> getOt() {
    return ot;
  }


  /**
   * Sets the value of the 'ot' field.
   * set of optin treatments
   * @param value the value to set.
   */
  public void setOt(java.util.List<java.lang.Long> value) {
    this.ot = value;
  }

  /**
   * Gets the value of the 'os' field.
   * @return qualification info for optin treatments
   */
  public java.util.List<java.lang.String> getOs() {
    return os;
  }


  /**
   * Sets the value of the 'os' field.
   * qualification info for optin treatments
   * @param value the value to set.
   */
  public void setOs(java.util.List<java.lang.String> value) {
    this.os = value;
  }

  /**
   * Gets the value of the 'eprlogid' field.
   * @return rlogid of the host that perform qualification
   */
  public java.lang.String getEprlogid() {
    return eprlogid;
  }


  /**
   * Sets the value of the 'eprlogid' field.
   * rlogid of the host that perform qualification
   * @param value the value to set.
   */
  public void setEprlogid(java.lang.String value) {
    this.eprlogid = value;
  }

  /**
   * Gets the value of the 'epcalenv' field.
   * @return the CAL environmant of eprlogid
   */
  public java.lang.String getEpcalenv() {
    return epcalenv;
  }


  /**
   * Sets the value of the 'epcalenv' field.
   * the CAL environmant of eprlogid
   * @param value the value to set.
   */
  public void setEpcalenv(java.lang.String value) {
    this.epcalenv = value;
  }

  /**
   * Gets the value of the 'qt' field.
   * @return set of qualified treatments
   */
  public java.util.List<java.lang.Long> getQt() {
    return qt;
  }


  /**
   * Sets the value of the 'qt' field.
   * set of qualified treatments
   * @param value the value to set.
   */
  public void setQt(java.util.List<java.lang.Long> value) {
    this.qt = value;
  }

  /**
   * Gets the value of the 'qc' field.
   * @return set of contextual qualified treatments
   */
  public java.util.List<java.lang.Long> getQc() {
    return qc;
  }


  /**
   * Sets the value of the 'qc' field.
   * set of contextual qualified treatments
   * @param value the value to set.
   */
  public void setQc(java.util.List<java.lang.Long> value) {
    this.qc = value;
  }

  /**
   * Gets the value of the 'uit' field.
   * @return User identification timestamp
   */
  public java.lang.Long getUit() {
    return uit;
  }


  /**
   * Sets the value of the 'uit' field.
   * User identification timestamp
   * @param value the value to set.
   */
  public void setUit(java.lang.Long value) {
    this.uit = value;
  }

  /**
   * Gets the value of the 'mdbreftime' field.
   * @return timestamp of last experiment metadata refresh from database
   */
  public java.lang.Long getMdbreftime() {
    return mdbreftime;
  }


  /**
   * Sets the value of the 'mdbreftime' field.
   * timestamp of last experiment metadata refresh from database
   * @param value the value to set.
   */
  public void setMdbreftime(java.lang.Long value) {
    this.mdbreftime = value;
  }

  /**
   * Gets the value of the 'anyId' field.
   * @return Information for AnyId type EP
   */
  public java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> getAnyId() {
    return anyId;
  }


  /**
   * Sets the value of the 'anyId' field.
   * Information for AnyId type EP
   * @param value the value to set.
   */
  public void setAnyId(java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> value) {
    this.anyId = value;
  }

  /**
   * Creates a new ExperimentationContext RecordBuilder.
   * @return A new ExperimentationContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder newBuilder() {
    return new com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder();
  }

  /**
   * Creates a new ExperimentationContext RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ExperimentationContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder(other);
    }
  }

  /**
   * Creates a new ExperimentationContext RecordBuilder by copying an existing ExperimentationContext instance.
   * @param other The existing instance to copy.
   * @return A new ExperimentationContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.ExperimentationContext other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder(other);
    }
  }

  /**
   * RecordBuilder for ExperimentationContext instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExperimentationContext>
    implements org.apache.avro.data.RecordBuilder<ExperimentationContext> {

    /** ep site id - using com.ebay.globalenv.SiteEnum */
    private int es;
    /** ep channel id - using com.ebay.ep.core.cos.COSUtil */
    private int ec;
    /** set of experienced treatments */
    private java.util.List<java.lang.Long> xt;
    /** set of optin treatments */
    private java.util.List<java.lang.Long> ot;
    /** qualification info for optin treatments */
    private java.util.List<java.lang.String> os;
    /** rlogid of the host that perform qualification */
    private java.lang.String eprlogid;
    /** the CAL environmant of eprlogid */
    private java.lang.String epcalenv;
    /** set of qualified treatments */
    private java.util.List<java.lang.Long> qt;
    /** set of contextual qualified treatments */
    private java.util.List<java.lang.Long> qc;
    /** User identification timestamp */
    private java.lang.Long uit;
    /** timestamp of last experiment metadata refresh from database */
    private java.lang.Long mdbreftime;
    /** Information for AnyId type EP */
    private java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> anyId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.es)) {
        this.es = data().deepCopy(fields()[0].schema(), other.es);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ec)) {
        this.ec = data().deepCopy(fields()[1].schema(), other.ec);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.xt)) {
        this.xt = data().deepCopy(fields()[2].schema(), other.xt);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.ot)) {
        this.ot = data().deepCopy(fields()[3].schema(), other.ot);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.os)) {
        this.os = data().deepCopy(fields()[4].schema(), other.os);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.eprlogid)) {
        this.eprlogid = data().deepCopy(fields()[5].schema(), other.eprlogid);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.epcalenv)) {
        this.epcalenv = data().deepCopy(fields()[6].schema(), other.epcalenv);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.qt)) {
        this.qt = data().deepCopy(fields()[7].schema(), other.qt);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.qc)) {
        this.qc = data().deepCopy(fields()[8].schema(), other.qc);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.uit)) {
        this.uit = data().deepCopy(fields()[9].schema(), other.uit);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.mdbreftime)) {
        this.mdbreftime = data().deepCopy(fields()[10].schema(), other.mdbreftime);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.anyId)) {
        this.anyId = data().deepCopy(fields()[11].schema(), other.anyId);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing ExperimentationContext instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.ExperimentationContext other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.es)) {
        this.es = data().deepCopy(fields()[0].schema(), other.es);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ec)) {
        this.ec = data().deepCopy(fields()[1].schema(), other.ec);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.xt)) {
        this.xt = data().deepCopy(fields()[2].schema(), other.xt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ot)) {
        this.ot = data().deepCopy(fields()[3].schema(), other.ot);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.os)) {
        this.os = data().deepCopy(fields()[4].schema(), other.os);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.eprlogid)) {
        this.eprlogid = data().deepCopy(fields()[5].schema(), other.eprlogid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.epcalenv)) {
        this.epcalenv = data().deepCopy(fields()[6].schema(), other.epcalenv);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.qt)) {
        this.qt = data().deepCopy(fields()[7].schema(), other.qt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.qc)) {
        this.qc = data().deepCopy(fields()[8].schema(), other.qc);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.uit)) {
        this.uit = data().deepCopy(fields()[9].schema(), other.uit);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.mdbreftime)) {
        this.mdbreftime = data().deepCopy(fields()[10].schema(), other.mdbreftime);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.anyId)) {
        this.anyId = data().deepCopy(fields()[11].schema(), other.anyId);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'es' field.
      * ep site id - using com.ebay.globalenv.SiteEnum
      * @return The value.
      */
    public int getEs() {
      return es;
    }


    /**
      * Sets the value of the 'es' field.
      * ep site id - using com.ebay.globalenv.SiteEnum
      * @param value The value of 'es'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setEs(int value) {
      validate(fields()[0], value);
      this.es = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'es' field has been set.
      * ep site id - using com.ebay.globalenv.SiteEnum
      * @return True if the 'es' field has been set, false otherwise.
      */
    public boolean hasEs() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'es' field.
      * ep site id - using com.ebay.globalenv.SiteEnum
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearEs() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ec' field.
      * ep channel id - using com.ebay.ep.core.cos.COSUtil
      * @return The value.
      */
    public int getEc() {
      return ec;
    }


    /**
      * Sets the value of the 'ec' field.
      * ep channel id - using com.ebay.ep.core.cos.COSUtil
      * @param value The value of 'ec'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setEc(int value) {
      validate(fields()[1], value);
      this.ec = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ec' field has been set.
      * ep channel id - using com.ebay.ep.core.cos.COSUtil
      * @return True if the 'ec' field has been set, false otherwise.
      */
    public boolean hasEc() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ec' field.
      * ep channel id - using com.ebay.ep.core.cos.COSUtil
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearEc() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'xt' field.
      * set of experienced treatments
      * @return The value.
      */
    public java.util.List<java.lang.Long> getXt() {
      return xt;
    }


    /**
      * Sets the value of the 'xt' field.
      * set of experienced treatments
      * @param value The value of 'xt'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setXt(java.util.List<java.lang.Long> value) {
      validate(fields()[2], value);
      this.xt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'xt' field has been set.
      * set of experienced treatments
      * @return True if the 'xt' field has been set, false otherwise.
      */
    public boolean hasXt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'xt' field.
      * set of experienced treatments
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearXt() {
      xt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ot' field.
      * set of optin treatments
      * @return The value.
      */
    public java.util.List<java.lang.Long> getOt() {
      return ot;
    }


    /**
      * Sets the value of the 'ot' field.
      * set of optin treatments
      * @param value The value of 'ot'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setOt(java.util.List<java.lang.Long> value) {
      validate(fields()[3], value);
      this.ot = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ot' field has been set.
      * set of optin treatments
      * @return True if the 'ot' field has been set, false otherwise.
      */
    public boolean hasOt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ot' field.
      * set of optin treatments
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearOt() {
      ot = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'os' field.
      * qualification info for optin treatments
      * @return The value.
      */
    public java.util.List<java.lang.String> getOs() {
      return os;
    }


    /**
      * Sets the value of the 'os' field.
      * qualification info for optin treatments
      * @param value The value of 'os'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setOs(java.util.List<java.lang.String> value) {
      validate(fields()[4], value);
      this.os = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'os' field has been set.
      * qualification info for optin treatments
      * @return True if the 'os' field has been set, false otherwise.
      */
    public boolean hasOs() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'os' field.
      * qualification info for optin treatments
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearOs() {
      os = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'eprlogid' field.
      * rlogid of the host that perform qualification
      * @return The value.
      */
    public java.lang.String getEprlogid() {
      return eprlogid;
    }


    /**
      * Sets the value of the 'eprlogid' field.
      * rlogid of the host that perform qualification
      * @param value The value of 'eprlogid'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setEprlogid(java.lang.String value) {
      validate(fields()[5], value);
      this.eprlogid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'eprlogid' field has been set.
      * rlogid of the host that perform qualification
      * @return True if the 'eprlogid' field has been set, false otherwise.
      */
    public boolean hasEprlogid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'eprlogid' field.
      * rlogid of the host that perform qualification
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearEprlogid() {
      eprlogid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'epcalenv' field.
      * the CAL environmant of eprlogid
      * @return The value.
      */
    public java.lang.String getEpcalenv() {
      return epcalenv;
    }


    /**
      * Sets the value of the 'epcalenv' field.
      * the CAL environmant of eprlogid
      * @param value The value of 'epcalenv'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setEpcalenv(java.lang.String value) {
      validate(fields()[6], value);
      this.epcalenv = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'epcalenv' field has been set.
      * the CAL environmant of eprlogid
      * @return True if the 'epcalenv' field has been set, false otherwise.
      */
    public boolean hasEpcalenv() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'epcalenv' field.
      * the CAL environmant of eprlogid
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearEpcalenv() {
      epcalenv = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'qt' field.
      * set of qualified treatments
      * @return The value.
      */
    public java.util.List<java.lang.Long> getQt() {
      return qt;
    }


    /**
      * Sets the value of the 'qt' field.
      * set of qualified treatments
      * @param value The value of 'qt'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setQt(java.util.List<java.lang.Long> value) {
      validate(fields()[7], value);
      this.qt = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'qt' field has been set.
      * set of qualified treatments
      * @return True if the 'qt' field has been set, false otherwise.
      */
    public boolean hasQt() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'qt' field.
      * set of qualified treatments
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearQt() {
      qt = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'qc' field.
      * set of contextual qualified treatments
      * @return The value.
      */
    public java.util.List<java.lang.Long> getQc() {
      return qc;
    }


    /**
      * Sets the value of the 'qc' field.
      * set of contextual qualified treatments
      * @param value The value of 'qc'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setQc(java.util.List<java.lang.Long> value) {
      validate(fields()[8], value);
      this.qc = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'qc' field has been set.
      * set of contextual qualified treatments
      * @return True if the 'qc' field has been set, false otherwise.
      */
    public boolean hasQc() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'qc' field.
      * set of contextual qualified treatments
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearQc() {
      qc = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'uit' field.
      * User identification timestamp
      * @return The value.
      */
    public java.lang.Long getUit() {
      return uit;
    }


    /**
      * Sets the value of the 'uit' field.
      * User identification timestamp
      * @param value The value of 'uit'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setUit(java.lang.Long value) {
      validate(fields()[9], value);
      this.uit = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'uit' field has been set.
      * User identification timestamp
      * @return True if the 'uit' field has been set, false otherwise.
      */
    public boolean hasUit() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'uit' field.
      * User identification timestamp
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearUit() {
      uit = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'mdbreftime' field.
      * timestamp of last experiment metadata refresh from database
      * @return The value.
      */
    public java.lang.Long getMdbreftime() {
      return mdbreftime;
    }


    /**
      * Sets the value of the 'mdbreftime' field.
      * timestamp of last experiment metadata refresh from database
      * @param value The value of 'mdbreftime'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setMdbreftime(java.lang.Long value) {
      validate(fields()[10], value);
      this.mdbreftime = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'mdbreftime' field has been set.
      * timestamp of last experiment metadata refresh from database
      * @return True if the 'mdbreftime' field has been set, false otherwise.
      */
    public boolean hasMdbreftime() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'mdbreftime' field.
      * timestamp of last experiment metadata refresh from database
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearMdbreftime() {
      mdbreftime = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'anyId' field.
      * Information for AnyId type EP
      * @return The value.
      */
    public java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> getAnyId() {
      return anyId;
    }


    /**
      * Sets the value of the 'anyId' field.
      * Information for AnyId type EP
      * @param value The value of 'anyId'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder setAnyId(java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> value) {
      validate(fields()[11], value);
      this.anyId = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'anyId' field has been set.
      * Information for AnyId type EP
      * @return True if the 'anyId' field has been set, false otherwise.
      */
    public boolean hasAnyId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'anyId' field.
      * Information for AnyId type EP
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.ExperimentationContext.Builder clearAnyId() {
      anyId = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ExperimentationContext build() {
      try {
        ExperimentationContext record = new ExperimentationContext();
        record.es = fieldSetFlags()[0] ? this.es : (java.lang.Integer) defaultValue(fields()[0]);
        record.ec = fieldSetFlags()[1] ? this.ec : (java.lang.Integer) defaultValue(fields()[1]);
        record.xt = fieldSetFlags()[2] ? this.xt : (java.util.List<java.lang.Long>) defaultValue(fields()[2]);
        record.ot = fieldSetFlags()[3] ? this.ot : (java.util.List<java.lang.Long>) defaultValue(fields()[3]);
        record.os = fieldSetFlags()[4] ? this.os : (java.util.List<java.lang.String>) defaultValue(fields()[4]);
        record.eprlogid = fieldSetFlags()[5] ? this.eprlogid : (java.lang.String) defaultValue(fields()[5]);
        record.epcalenv = fieldSetFlags()[6] ? this.epcalenv : (java.lang.String) defaultValue(fields()[6]);
        record.qt = fieldSetFlags()[7] ? this.qt : (java.util.List<java.lang.Long>) defaultValue(fields()[7]);
        record.qc = fieldSetFlags()[8] ? this.qc : (java.util.List<java.lang.Long>) defaultValue(fields()[8]);
        record.uit = fieldSetFlags()[9] ? this.uit : (java.lang.Long) defaultValue(fields()[9]);
        record.mdbreftime = fieldSetFlags()[10] ? this.mdbreftime : (java.lang.Long) defaultValue(fields()[10]);
        record.anyId = fieldSetFlags()[11] ? this.anyId : (java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId>) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ExperimentationContext>
    WRITER$ = (org.apache.avro.io.DatumWriter<ExperimentationContext>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ExperimentationContext>
    READER$ = (org.apache.avro.io.DatumReader<ExperimentationContext>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.es);

    out.writeInt(this.ec);

    long size0 = this.xt.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.Long e0: this.xt) {
      actualSize0++;
      out.startItem();
      out.writeLong(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.ot.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.Long e1: this.ot) {
      actualSize1++;
      out.startItem();
      out.writeLong(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    long size2 = this.os.size();
    out.writeArrayStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (java.lang.String e2: this.os) {
      actualSize2++;
      out.startItem();
      out.writeString(e2);
    }
    out.writeArrayEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");

    if (this.eprlogid == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.eprlogid);
    }

    if (this.epcalenv == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.epcalenv);
    }

    long size3 = this.qt.size();
    out.writeArrayStart();
    out.setItemCount(size3);
    long actualSize3 = 0;
    for (java.lang.Long e3: this.qt) {
      actualSize3++;
      out.startItem();
      out.writeLong(e3);
    }
    out.writeArrayEnd();
    if (actualSize3 != size3)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");

    long size4 = this.qc.size();
    out.writeArrayStart();
    out.setItemCount(size4);
    long actualSize4 = 0;
    for (java.lang.Long e4: this.qc) {
      actualSize4++;
      out.startItem();
      out.writeLong(e4);
    }
    out.writeArrayEnd();
    if (actualSize4 != size4)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size4 + ", but element count was " + actualSize4 + ".");

    if (this.uit == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.uit);
    }

    if (this.mdbreftime == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.mdbreftime);
    }

    long size5 = this.anyId.size();
    out.writeArrayStart();
    out.setItemCount(size5);
    long actualSize5 = 0;
    for (com.ebay.dap.tdq.common.model.avro.AnyId e5: this.anyId) {
      actualSize5++;
      out.startItem();
      e5.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize5 != size5)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size5 + ", but element count was " + actualSize5 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.es = in.readInt();

      this.ec = in.readInt();

      long size0 = in.readArrayStart();
      java.util.List<java.lang.Long> a0 = this.xt;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.Long>((int)size0, SCHEMA$.getField("xt").schema());
        this.xt = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.Long> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.Long e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readLong();
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<java.lang.Long> a1 = this.ot;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.Long>((int)size1, SCHEMA$.getField("ot").schema());
        this.ot = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.Long> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.Long e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readLong();
          a1.add(e1);
        }
      }

      long size2 = in.readArrayStart();
      java.util.List<java.lang.String> a2 = this.os;
      if (a2 == null) {
        a2 = new SpecificData.Array<java.lang.String>((int)size2, SCHEMA$.getField("os").schema());
        this.os = a2;
      } else a2.clear();
      SpecificData.Array<java.lang.String> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a2 : null);
      for ( ; 0 < size2; size2 = in.arrayNext()) {
        for ( ; size2 != 0; size2--) {
          java.lang.String e2 = (ga2 != null ? ga2.peek() : null);
          e2 = in.readString();
          a2.add(e2);
        }
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.eprlogid = null;
      } else {
        this.eprlogid = in.readString();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.epcalenv = null;
      } else {
        this.epcalenv = in.readString();
      }

      long size3 = in.readArrayStart();
      java.util.List<java.lang.Long> a3 = this.qt;
      if (a3 == null) {
        a3 = new SpecificData.Array<java.lang.Long>((int)size3, SCHEMA$.getField("qt").schema());
        this.qt = a3;
      } else a3.clear();
      SpecificData.Array<java.lang.Long> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a3 : null);
      for ( ; 0 < size3; size3 = in.arrayNext()) {
        for ( ; size3 != 0; size3--) {
          java.lang.Long e3 = (ga3 != null ? ga3.peek() : null);
          e3 = in.readLong();
          a3.add(e3);
        }
      }

      long size4 = in.readArrayStart();
      java.util.List<java.lang.Long> a4 = this.qc;
      if (a4 == null) {
        a4 = new SpecificData.Array<java.lang.Long>((int)size4, SCHEMA$.getField("qc").schema());
        this.qc = a4;
      } else a4.clear();
      SpecificData.Array<java.lang.Long> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a4 : null);
      for ( ; 0 < size4; size4 = in.arrayNext()) {
        for ( ; size4 != 0; size4--) {
          java.lang.Long e4 = (ga4 != null ? ga4.peek() : null);
          e4 = in.readLong();
          a4.add(e4);
        }
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.uit = null;
      } else {
        this.uit = in.readLong();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.mdbreftime = null;
      } else {
        this.mdbreftime = in.readLong();
      }

      long size5 = in.readArrayStart();
      java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> a5 = this.anyId;
      if (a5 == null) {
        a5 = new SpecificData.Array<com.ebay.dap.tdq.common.model.avro.AnyId>((int)size5, SCHEMA$.getField("anyId").schema());
        this.anyId = a5;
      } else a5.clear();
      SpecificData.Array<com.ebay.dap.tdq.common.model.avro.AnyId> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<com.ebay.dap.tdq.common.model.avro.AnyId>)a5 : null);
      for ( ; 0 < size5; size5 = in.arrayNext()) {
        for ( ; size5 != 0; size5--) {
          com.ebay.dap.tdq.common.model.avro.AnyId e5 = (ga5 != null ? ga5.peek() : null);
          if (e5 == null) {
            e5 = new com.ebay.dap.tdq.common.model.avro.AnyId();
          }
          e5.customDecode(in);
          a5.add(e5);
        }
      }

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.es = in.readInt();
          break;

        case 1:
          this.ec = in.readInt();
          break;

        case 2:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.Long> a0 = this.xt;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.Long>((int)size0, SCHEMA$.getField("xt").schema());
            this.xt = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.Long> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.Long e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readLong();
              a0.add(e0);
            }
          }
          break;

        case 3:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.Long> a1 = this.ot;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.Long>((int)size1, SCHEMA$.getField("ot").schema());
            this.ot = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.Long> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.Long e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readLong();
              a1.add(e1);
            }
          }
          break;

        case 4:
          long size2 = in.readArrayStart();
          java.util.List<java.lang.String> a2 = this.os;
          if (a2 == null) {
            a2 = new SpecificData.Array<java.lang.String>((int)size2, SCHEMA$.getField("os").schema());
            this.os = a2;
          } else a2.clear();
          SpecificData.Array<java.lang.String> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.String>)a2 : null);
          for ( ; 0 < size2; size2 = in.arrayNext()) {
            for ( ; size2 != 0; size2--) {
              java.lang.String e2 = (ga2 != null ? ga2.peek() : null);
              e2 = in.readString();
              a2.add(e2);
            }
          }
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.eprlogid = null;
          } else {
            this.eprlogid = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 0) {
            in.readNull();
            this.epcalenv = null;
          } else {
            this.epcalenv = in.readString();
          }
          break;

        case 7:
          long size3 = in.readArrayStart();
          java.util.List<java.lang.Long> a3 = this.qt;
          if (a3 == null) {
            a3 = new SpecificData.Array<java.lang.Long>((int)size3, SCHEMA$.getField("qt").schema());
            this.qt = a3;
          } else a3.clear();
          SpecificData.Array<java.lang.Long> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a3 : null);
          for ( ; 0 < size3; size3 = in.arrayNext()) {
            for ( ; size3 != 0; size3--) {
              java.lang.Long e3 = (ga3 != null ? ga3.peek() : null);
              e3 = in.readLong();
              a3.add(e3);
            }
          }
          break;

        case 8:
          long size4 = in.readArrayStart();
          java.util.List<java.lang.Long> a4 = this.qc;
          if (a4 == null) {
            a4 = new SpecificData.Array<java.lang.Long>((int)size4, SCHEMA$.getField("qc").schema());
            this.qc = a4;
          } else a4.clear();
          SpecificData.Array<java.lang.Long> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Long>)a4 : null);
          for ( ; 0 < size4; size4 = in.arrayNext()) {
            for ( ; size4 != 0; size4--) {
              java.lang.Long e4 = (ga4 != null ? ga4.peek() : null);
              e4 = in.readLong();
              a4.add(e4);
            }
          }
          break;

        case 9:
          if (in.readIndex() != 0) {
            in.readNull();
            this.uit = null;
          } else {
            this.uit = in.readLong();
          }
          break;

        case 10:
          if (in.readIndex() != 0) {
            in.readNull();
            this.mdbreftime = null;
          } else {
            this.mdbreftime = in.readLong();
          }
          break;

        case 11:
          long size5 = in.readArrayStart();
          java.util.List<com.ebay.dap.tdq.common.model.avro.AnyId> a5 = this.anyId;
          if (a5 == null) {
            a5 = new SpecificData.Array<com.ebay.dap.tdq.common.model.avro.AnyId>((int)size5, SCHEMA$.getField("anyId").schema());
            this.anyId = a5;
          } else a5.clear();
          SpecificData.Array<com.ebay.dap.tdq.common.model.avro.AnyId> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<com.ebay.dap.tdq.common.model.avro.AnyId>)a5 : null);
          for ( ; 0 < size5; size5 = in.arrayNext()) {
            for ( ; size5 != 0; size5--) {
              com.ebay.dap.tdq.common.model.avro.AnyId e5 = (ga5 != null ? ga5.peek() : null);
              if (e5 == null) {
                e5 = new com.ebay.dap.tdq.common.model.avro.AnyId();
              }
              e5.customDecode(in);
              a5.add(e5);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










