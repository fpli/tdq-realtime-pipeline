/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.dap.tdq.common.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** This category of cols may be used internally. It won't output to downstream in stateful processor.
* If some events throw a failure. Log some info to help debugging.
* And send the failed event to monitor topic for quality control and alert */
@org.apache.avro.specific.AvroGenerated
public class DebuggingContext extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5382642576243901688L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DebuggingContext\",\"namespace\":\"com.ebay.dap.tdq.common.model.avro\",\"doc\":\"This category of cols may be used internally. It won't output to downstream in stateful processor.\\n* If some events throw a failure. Log some info to help debugging.\\n* And send the failed event to monitor topic for quality control and alert\",\"fields\":[{\"name\":\"schemaTransFailures\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}},{\"name\":\"ingestionFailures\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}},{\"name\":\"errorCode\",\"type\":[\"null\",\"long\"]},{\"name\":\"poolName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"collectionServer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"trackingAgentVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"others\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DebuggingContext> ENCODER =
      new BinaryMessageEncoder<DebuggingContext>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DebuggingContext> DECODER =
      new BinaryMessageDecoder<DebuggingContext>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DebuggingContext> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DebuggingContext> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DebuggingContext> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DebuggingContext>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DebuggingContext to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DebuggingContext from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DebuggingContext instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DebuggingContext fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.Map<java.lang.String,java.lang.String> schemaTransFailures;
   private java.util.Map<java.lang.String,java.lang.String> ingestionFailures;
   private java.lang.Long errorCode;
   private java.lang.String poolName;
   private java.lang.String collectionServer;
   private java.lang.String trackingAgentVersion;
   private java.util.Map<java.lang.String,java.lang.String> others;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DebuggingContext() {}

  /**
   * All-args constructor.
   * @param schemaTransFailures The new value for schemaTransFailures
   * @param ingestionFailures The new value for ingestionFailures
   * @param errorCode The new value for errorCode
   * @param poolName The new value for poolName
   * @param collectionServer The new value for collectionServer
   * @param trackingAgentVersion The new value for trackingAgentVersion
   * @param others The new value for others
   */
  public DebuggingContext(java.util.Map<java.lang.String,java.lang.String> schemaTransFailures, java.util.Map<java.lang.String,java.lang.String> ingestionFailures, java.lang.Long errorCode, java.lang.String poolName, java.lang.String collectionServer, java.lang.String trackingAgentVersion, java.util.Map<java.lang.String,java.lang.String> others) {
    this.schemaTransFailures = schemaTransFailures;
    this.ingestionFailures = ingestionFailures;
    this.errorCode = errorCode;
    this.poolName = poolName;
    this.collectionServer = collectionServer;
    this.trackingAgentVersion = trackingAgentVersion;
    this.others = others;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return schemaTransFailures;
    case 1: return ingestionFailures;
    case 2: return errorCode;
    case 3: return poolName;
    case 4: return collectionServer;
    case 5: return trackingAgentVersion;
    case 6: return others;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: schemaTransFailures = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 1: ingestionFailures = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 2: errorCode = (java.lang.Long)value$; break;
    case 3: poolName = value$ != null ? value$.toString() : null; break;
    case 4: collectionServer = value$ != null ? value$.toString() : null; break;
    case 5: trackingAgentVersion = value$ != null ? value$.toString() : null; break;
    case 6: others = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'schemaTransFailures' field.
   * @return The value of the 'schemaTransFailures' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getSchemaTransFailures() {
    return schemaTransFailures;
  }


  /**
   * Sets the value of the 'schemaTransFailures' field.
   * @param value the value to set.
   */
  public void setSchemaTransFailures(java.util.Map<java.lang.String,java.lang.String> value) {
    this.schemaTransFailures = value;
  }

  /**
   * Gets the value of the 'ingestionFailures' field.
   * @return The value of the 'ingestionFailures' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getIngestionFailures() {
    return ingestionFailures;
  }


  /**
   * Sets the value of the 'ingestionFailures' field.
   * @param value the value to set.
   */
  public void setIngestionFailures(java.util.Map<java.lang.String,java.lang.String> value) {
    this.ingestionFailures = value;
  }

  /**
   * Gets the value of the 'errorCode' field.
   * @return The value of the 'errorCode' field.
   */
  public java.lang.Long getErrorCode() {
    return errorCode;
  }


  /**
   * Sets the value of the 'errorCode' field.
   * @param value the value to set.
   */
  public void setErrorCode(java.lang.Long value) {
    this.errorCode = value;
  }

  /**
   * Gets the value of the 'poolName' field.
   * @return The value of the 'poolName' field.
   */
  public java.lang.String getPoolName() {
    return poolName;
  }


  /**
   * Sets the value of the 'poolName' field.
   * @param value the value to set.
   */
  public void setPoolName(java.lang.String value) {
    this.poolName = value;
  }

  /**
   * Gets the value of the 'collectionServer' field.
   * @return The value of the 'collectionServer' field.
   */
  public java.lang.String getCollectionServer() {
    return collectionServer;
  }


  /**
   * Sets the value of the 'collectionServer' field.
   * @param value the value to set.
   */
  public void setCollectionServer(java.lang.String value) {
    this.collectionServer = value;
  }

  /**
   * Gets the value of the 'trackingAgentVersion' field.
   * @return The value of the 'trackingAgentVersion' field.
   */
  public java.lang.String getTrackingAgentVersion() {
    return trackingAgentVersion;
  }


  /**
   * Sets the value of the 'trackingAgentVersion' field.
   * @param value the value to set.
   */
  public void setTrackingAgentVersion(java.lang.String value) {
    this.trackingAgentVersion = value;
  }

  /**
   * Gets the value of the 'others' field.
   * @return The value of the 'others' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getOthers() {
    return others;
  }


  /**
   * Sets the value of the 'others' field.
   * @param value the value to set.
   */
  public void setOthers(java.util.Map<java.lang.String,java.lang.String> value) {
    this.others = value;
  }

  /**
   * Creates a new DebuggingContext RecordBuilder.
   * @return A new DebuggingContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder newBuilder() {
    return new com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder();
  }

  /**
   * Creates a new DebuggingContext RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DebuggingContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder(other);
    }
  }

  /**
   * Creates a new DebuggingContext RecordBuilder by copying an existing DebuggingContext instance.
   * @param other The existing instance to copy.
   * @return A new DebuggingContext RecordBuilder
   */
  public static com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder newBuilder(com.ebay.dap.tdq.common.model.avro.DebuggingContext other) {
    if (other == null) {
      return new com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder();
    } else {
      return new com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder(other);
    }
  }

  /**
   * RecordBuilder for DebuggingContext instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DebuggingContext>
    implements org.apache.avro.data.RecordBuilder<DebuggingContext> {

    private java.util.Map<java.lang.String,java.lang.String> schemaTransFailures;
    private java.util.Map<java.lang.String,java.lang.String> ingestionFailures;
    private java.lang.Long errorCode;
    private java.lang.String poolName;
    private java.lang.String collectionServer;
    private java.lang.String trackingAgentVersion;
    private java.util.Map<java.lang.String,java.lang.String> others;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.schemaTransFailures)) {
        this.schemaTransFailures = data().deepCopy(fields()[0].schema(), other.schemaTransFailures);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ingestionFailures)) {
        this.ingestionFailures = data().deepCopy(fields()[1].schema(), other.ingestionFailures);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.errorCode)) {
        this.errorCode = data().deepCopy(fields()[2].schema(), other.errorCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.poolName)) {
        this.poolName = data().deepCopy(fields()[3].schema(), other.poolName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.collectionServer)) {
        this.collectionServer = data().deepCopy(fields()[4].schema(), other.collectionServer);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.trackingAgentVersion)) {
        this.trackingAgentVersion = data().deepCopy(fields()[5].schema(), other.trackingAgentVersion);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.others)) {
        this.others = data().deepCopy(fields()[6].schema(), other.others);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing DebuggingContext instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.dap.tdq.common.model.avro.DebuggingContext other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.schemaTransFailures)) {
        this.schemaTransFailures = data().deepCopy(fields()[0].schema(), other.schemaTransFailures);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ingestionFailures)) {
        this.ingestionFailures = data().deepCopy(fields()[1].schema(), other.ingestionFailures);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.errorCode)) {
        this.errorCode = data().deepCopy(fields()[2].schema(), other.errorCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.poolName)) {
        this.poolName = data().deepCopy(fields()[3].schema(), other.poolName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.collectionServer)) {
        this.collectionServer = data().deepCopy(fields()[4].schema(), other.collectionServer);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.trackingAgentVersion)) {
        this.trackingAgentVersion = data().deepCopy(fields()[5].schema(), other.trackingAgentVersion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.others)) {
        this.others = data().deepCopy(fields()[6].schema(), other.others);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'schemaTransFailures' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getSchemaTransFailures() {
      return schemaTransFailures;
    }


    /**
      * Sets the value of the 'schemaTransFailures' field.
      * @param value The value of 'schemaTransFailures'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder setSchemaTransFailures(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[0], value);
      this.schemaTransFailures = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'schemaTransFailures' field has been set.
      * @return True if the 'schemaTransFailures' field has been set, false otherwise.
      */
    public boolean hasSchemaTransFailures() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'schemaTransFailures' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder clearSchemaTransFailures() {
      schemaTransFailures = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ingestionFailures' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getIngestionFailures() {
      return ingestionFailures;
    }


    /**
      * Sets the value of the 'ingestionFailures' field.
      * @param value The value of 'ingestionFailures'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder setIngestionFailures(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[1], value);
      this.ingestionFailures = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ingestionFailures' field has been set.
      * @return True if the 'ingestionFailures' field has been set, false otherwise.
      */
    public boolean hasIngestionFailures() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ingestionFailures' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder clearIngestionFailures() {
      ingestionFailures = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorCode' field.
      * @return The value.
      */
    public java.lang.Long getErrorCode() {
      return errorCode;
    }


    /**
      * Sets the value of the 'errorCode' field.
      * @param value The value of 'errorCode'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder setErrorCode(java.lang.Long value) {
      validate(fields()[2], value);
      this.errorCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'errorCode' field has been set.
      * @return True if the 'errorCode' field has been set, false otherwise.
      */
    public boolean hasErrorCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'errorCode' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder clearErrorCode() {
      errorCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'poolName' field.
      * @return The value.
      */
    public java.lang.String getPoolName() {
      return poolName;
    }


    /**
      * Sets the value of the 'poolName' field.
      * @param value The value of 'poolName'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder setPoolName(java.lang.String value) {
      validate(fields()[3], value);
      this.poolName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'poolName' field has been set.
      * @return True if the 'poolName' field has been set, false otherwise.
      */
    public boolean hasPoolName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'poolName' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder clearPoolName() {
      poolName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'collectionServer' field.
      * @return The value.
      */
    public java.lang.String getCollectionServer() {
      return collectionServer;
    }


    /**
      * Sets the value of the 'collectionServer' field.
      * @param value The value of 'collectionServer'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder setCollectionServer(java.lang.String value) {
      validate(fields()[4], value);
      this.collectionServer = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'collectionServer' field has been set.
      * @return True if the 'collectionServer' field has been set, false otherwise.
      */
    public boolean hasCollectionServer() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'collectionServer' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder clearCollectionServer() {
      collectionServer = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackingAgentVersion' field.
      * @return The value.
      */
    public java.lang.String getTrackingAgentVersion() {
      return trackingAgentVersion;
    }


    /**
      * Sets the value of the 'trackingAgentVersion' field.
      * @param value The value of 'trackingAgentVersion'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder setTrackingAgentVersion(java.lang.String value) {
      validate(fields()[5], value);
      this.trackingAgentVersion = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'trackingAgentVersion' field has been set.
      * @return True if the 'trackingAgentVersion' field has been set, false otherwise.
      */
    public boolean hasTrackingAgentVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'trackingAgentVersion' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder clearTrackingAgentVersion() {
      trackingAgentVersion = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'others' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getOthers() {
      return others;
    }


    /**
      * Sets the value of the 'others' field.
      * @param value The value of 'others'.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder setOthers(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[6], value);
      this.others = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'others' field has been set.
      * @return True if the 'others' field has been set, false otherwise.
      */
    public boolean hasOthers() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'others' field.
      * @return This builder.
      */
    public com.ebay.dap.tdq.common.model.avro.DebuggingContext.Builder clearOthers() {
      others = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DebuggingContext build() {
      try {
        DebuggingContext record = new DebuggingContext();
        record.schemaTransFailures = fieldSetFlags()[0] ? this.schemaTransFailures : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[0]);
        record.ingestionFailures = fieldSetFlags()[1] ? this.ingestionFailures : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[1]);
        record.errorCode = fieldSetFlags()[2] ? this.errorCode : (java.lang.Long) defaultValue(fields()[2]);
        record.poolName = fieldSetFlags()[3] ? this.poolName : (java.lang.String) defaultValue(fields()[3]);
        record.collectionServer = fieldSetFlags()[4] ? this.collectionServer : (java.lang.String) defaultValue(fields()[4]);
        record.trackingAgentVersion = fieldSetFlags()[5] ? this.trackingAgentVersion : (java.lang.String) defaultValue(fields()[5]);
        record.others = fieldSetFlags()[6] ? this.others : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DebuggingContext>
    WRITER$ = (org.apache.avro.io.DatumWriter<DebuggingContext>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DebuggingContext>
    READER$ = (org.apache.avro.io.DatumReader<DebuggingContext>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    long size0 = this.schemaTransFailures.size();
    out.writeMapStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> e0: this.schemaTransFailures.entrySet()) {
      actualSize0++;
      out.startItem();
      out.writeString(e0.getKey());
      java.lang.String v0 = e0.getValue();
      out.writeString(v0);
    }
    out.writeMapEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.ingestionFailures.size();
    out.writeMapStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> e1: this.ingestionFailures.entrySet()) {
      actualSize1++;
      out.startItem();
      out.writeString(e1.getKey());
      java.lang.String v1 = e1.getValue();
      out.writeString(v1);
    }
    out.writeMapEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    if (this.errorCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.errorCode);
    }

    if (this.poolName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.poolName);
    }

    if (this.collectionServer == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.collectionServer);
    }

    if (this.trackingAgentVersion == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.trackingAgentVersion);
    }

    long size2 = this.others.size();
    out.writeMapStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> e2: this.others.entrySet()) {
      actualSize2++;
      out.startItem();
      out.writeString(e2.getKey());
      java.lang.String v2 = e2.getValue();
      out.writeString(v2);
    }
    out.writeMapEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size2 + ", but element count was " + actualSize2 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      long size0 = in.readMapStart();
      java.util.Map<java.lang.String,java.lang.String> m0 = this.schemaTransFailures; // Need fresh name due to limitation of macro system
      if (m0 == null) {
        m0 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size0);
        this.schemaTransFailures = m0;
      } else m0.clear();
      for ( ; 0 < size0; size0 = in.mapNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.String k0 = null;
          k0 = in.readString();
          java.lang.String v0 = null;
          v0 = in.readString();
          m0.put(k0, v0);
        }
      }

      long size1 = in.readMapStart();
      java.util.Map<java.lang.String,java.lang.String> m1 = this.ingestionFailures; // Need fresh name due to limitation of macro system
      if (m1 == null) {
        m1 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size1);
        this.ingestionFailures = m1;
      } else m1.clear();
      for ( ; 0 < size1; size1 = in.mapNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.String k1 = null;
          k1 = in.readString();
          java.lang.String v1 = null;
          v1 = in.readString();
          m1.put(k1, v1);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.errorCode = null;
      } else {
        this.errorCode = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.poolName = null;
      } else {
        this.poolName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.collectionServer = null;
      } else {
        this.collectionServer = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.trackingAgentVersion = null;
      } else {
        this.trackingAgentVersion = in.readString();
      }

      long size2 = in.readMapStart();
      java.util.Map<java.lang.String,java.lang.String> m2 = this.others; // Need fresh name due to limitation of macro system
      if (m2 == null) {
        m2 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size2);
        this.others = m2;
      } else m2.clear();
      for ( ; 0 < size2; size2 = in.mapNext()) {
        for ( ; size2 != 0; size2--) {
          java.lang.String k2 = null;
          k2 = in.readString();
          java.lang.String v2 = null;
          v2 = in.readString();
          m2.put(k2, v2);
        }
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          long size0 = in.readMapStart();
          java.util.Map<java.lang.String,java.lang.String> m0 = this.schemaTransFailures; // Need fresh name due to limitation of macro system
          if (m0 == null) {
            m0 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size0);
            this.schemaTransFailures = m0;
          } else m0.clear();
          for ( ; 0 < size0; size0 = in.mapNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.String k0 = null;
              k0 = in.readString();
              java.lang.String v0 = null;
              v0 = in.readString();
              m0.put(k0, v0);
            }
          }
          break;

        case 1:
          long size1 = in.readMapStart();
          java.util.Map<java.lang.String,java.lang.String> m1 = this.ingestionFailures; // Need fresh name due to limitation of macro system
          if (m1 == null) {
            m1 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size1);
            this.ingestionFailures = m1;
          } else m1.clear();
          for ( ; 0 < size1; size1 = in.mapNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.String k1 = null;
              k1 = in.readString();
              java.lang.String v1 = null;
              v1 = in.readString();
              m1.put(k1, v1);
            }
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.errorCode = null;
          } else {
            this.errorCode = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.poolName = null;
          } else {
            this.poolName = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.collectionServer = null;
          } else {
            this.collectionServer = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.trackingAgentVersion = null;
          } else {
            this.trackingAgentVersion = in.readString();
          }
          break;

        case 6:
          long size2 = in.readMapStart();
          java.util.Map<java.lang.String,java.lang.String> m2 = this.others; // Need fresh name due to limitation of macro system
          if (m2 == null) {
            m2 = new java.util.HashMap<java.lang.String,java.lang.String>((int)size2);
            this.others = m2;
          } else m2.clear();
          for ( ; 0 < size2; size2 = in.mapNext()) {
            for ( ; size2 != 0; size2--) {
              java.lang.String k2 = null;
              k2 = in.readString();
              java.lang.String v2 = null;
              v2 = in.readString();
              m2.put(k2, v2);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










